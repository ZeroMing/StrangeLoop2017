    
    "Death of the Trusted Internet"
    by Marianne Bellotti
    
    Hi, everybody!   So, my name is Marianne Bellotti and I'm a software engineer. Right now I'm working with the Department of Commerce setting up tactical SWAT teams. But today I want to talk to you about the work that I did for the last year for a the United States Digital Service. Quick show of hands, how many people have heard of the US Digital Service before you talked to me this week? OK, cool. So very briefly, for those of you who have never heard of US Digital Service, it basically focuses on helping the government provide better digital services to citizens through technology. It's sometimes difficult for private sector people to really understand why government technology is so different, is so difficult. Like the government invented the internet, so why does it struggle so much in building websites that operate on top of it, especially if they have access to talent and almost infinite money? 
    But what we need to understand about good user experience and good digital services is that the way the private sector defines is often by pushing boundaries and privacy and security and free markets, that are not appropriate for the government to mimic. So, for example, as a consumer I love it that I can go to Amazon and literally order anything I can possibly think of, but is it great for the economy that all of that power is focused on one company? Probably not. I love that I can go to Facebook and look up people I went to high school with, but is it great that Facebook has all that data about me? Probably not. So a lot of times when I come into a technical project in the government, the big thing that is creating all these blockers is actually legitimate concerns about what is appropriate for the government to be doing with data, whats appropriate for them to be collecting data and how they should be configuring their systems for optimum security. So I think it's important to understand that the men and women of USDS are not geniuses, we're just people that are empowered to work across silos and organizes to diagnose technical problems. 
    TIC, Trusted Internet Connection, is a really good example of this fact. So this is David. David works for USDS. Before he came and worked for us he was the head of engineering at OkCupid and he comes up to me and he says I'm working on this project and the architecture that they're telling me I have to use, it seems pretty insane and they keep telling me that I have to use it because there's this thing called trusted internet section and basically it looks like this. Our website is at AWS and when people come from the public internet to this website they're not allowed to go directly to AWS. And he goes, well that would be one thing, except we also, backing that web app have a dynamo database and whenever the web app wants to talk to the dynamo database, it must route its connection between the government database and then back to the DynamoDB and he's like, this is particularly unusual, because both the EC2 instance and question and the DB in question are in the same data center in Amazon cloud, so why do we have to route connections out of the data center to go back to the data center and he asks me, has anybody in USDS ever worked on TIC before is this a problem we can solve? And I was like, you already know Brody who we kind of poached from security team and there's another guy named Aaron and he actually was a lawyer with the EPA, and so a lot of times when we're trying to diagnose these technical issues, we have people who will come and be stop, what you're doing is illegal, you can't do it and so for us the most valuable people in our team are this small group of lawyers who kind of swashbuckle in and go no, it's not illegal, and fence with the bureaucracy to clear it out of the way and when we originally hired Aaron, that's what he thought he would do, but he ended up knowing all about computer networks, so we got some engineers that really work hard-on these kind of issues and have some experience and opinions on them, so let's get them together and by the way, the people in the office of the federal CIO that work on technical policy, are aware that this policy is broken and have been trying to fix it desperately for like three years, so let's go work with them and see if we can find a solution to it. So that brings us to the question, what exactly is a trusted internet section? So trusted intersection connection is a policy that was written in 2007. Essentially it's an access point. What it says is whenever something on your internal network wants to talk to something expert it has to go through this very specific access point called a TIC, it says sort of be and you have agencies lie NOA and the FBI ha actually have a legitimate reason to have more than two so it's all about restricting access to government networks and so the intrusion detection systems that they're using are also signature-based, not anomaly based. Some of those signatures are classified, but they look at packets and they match known threats, known patterns of malicious activity. So back in 2007, this was not a terrible thing to do, because the internet looked completely different in 2007. So for reference, the iPhone had just come out, first generation, there was no App Store so we're in the beginning of the smartphone revolution, but we're not really very robust in the smartphone revolution. EC2 and S23 had just come out. It would be a year before Google and Microsoft started to really move into the commercial cloud market and people were still somewhat skeptical about software as a service. It was still like, yeah, it's a nice thing, it might lower some costs, but don't put anything critical on it. The problem is that it's 2017, it's a decade later, and how do you define perimeter security when your perimeter is basically dissolving in front of your eyes? You know, how do you define perimeter security when your email which most organizations would consider an internal capacity, is run through Google apps or Microsoft 65 when you're using applications like concur and sales force, when your employees expect to be able to work remotely, particularly your technical ones, when you're moving all of your stuff out of a data center onto some sort of a server as a service. So the way people deal with TIC in 2017 is by finessing the definition of internal and external to a somewhat insane degree. In theory, external applications are not supposed to have sensitive government data on them, but what sensitive government data actually means is up for debate. It's basically the agency has a lot of flexibility in defining that. There are some guardrails for those of you who are not familiar with the landscape of government technology, there are two really important things to understand. FISMA and Federal ramp. They're kind of difficult to grok, because they overlap a lot. But the way I think about it is FISMA is how you zee fine a network and fed ramp is how we certificate products and services that other people to trying to sell you as if they are equivalent to that model -- oops, so forgot one thing. In addition to that, some agencies actually have laws that Congress has passed specifying how they handle their data and what they can and cannot do. The two big ones to know are Title 13 which specifies how the census can use the data it collects on you and title 26 which specifies how the IRS can share your data. The IRS takes this very, very seriously. So let's go back to this example. What is actually happening in this architecture?
    This architecture actually looks like this. Where these two items are defined as internal systems and these two items are defined as external systems.
    And so as a result, whenever an internal and external system want to talk, they have to talk through the TIC. This is another example. We got a mobile application, we want it to talk to the cloud. If you managed to define both of these things as external or internal, they can talk like this but there are many situations in which you might say, no our mobile applications are in fact internal and our cloud environment is external, in which case they have to do this, or realistically speaking that probably looks more like this. So what further complicates the situation with TIC is that most agencies, when they want to go onto the cloud, they go on what's called Amazon's GovCloud, this is a specific data center that Amazon has set up to handle the U.S. Government's security needs. Really the difference between Gov Cloud and regular AWS is that the GovCloud is: The agencies are also required to UDHS's special classified intrusion detection software, so that always come comes up a lot. And we'll talk about that in more detail later. TIC itself creates a false sense of security. Not many people know exactly what it's doing, they just know that they are instructed to use it for security purposes so they tend to assume that TIC in and of itself creates security when in fact all it is is an access point. It also creates a rather large single point of failure at that. The final complication is that virtually all of our traffic is encrypted now and when you're doing packet sniffing you're not really getting that much information out of encrypted traffic, so the usefulness of TIC, whatever usefulness it brought to the table in 2007 is somewhat diminished by the fact that we're all using encrypted connections. So the first thing that we thought about when we thought about how can we change this, are various work-arounds that we could use, so for example, both Gmail and outlook allow you to define a custom mail server that outbound and inbound traffic can be forwarded to. So that can give you a TIC-like functionality for mail. We also said if you took away this two-TIC limit and let agessy have lots and lots of TICs, we could actually deliver government-wide network. The problem with that at least three administrations so far have made it a priority to consolidate data centers, so it sort of flies in the face of what the rest of the government is trying to do. They're trying to shut down data centers and shift to the cloud and we would be saying, no, no, no, put up more government centers, TICs so we can go to the cloud in a different way.
    Actually, the example that we put up on the board, that's the main reason why DynamoDB was considered external is that the time that they made that external decision, dynamo didn't have full support for VBCs. I believe that's no longer true. The last thing that people sometimes use to work around the TIC is the concept of peering and direct connect. Literally running a cable from one machine to another machine so that they're communicating that way.
    Essentially the challenge was figuring out if we want to modernize this, how are we going to modernize it? Like there's two main options. We can throw everything that TIC is out, and look at what's done in the private sector now. And just go from there. Which is something completely new or we can figure out how to virtualize the TIC so we can move it into the cloud and get the same benefit that is expected from normal conventional TIC but not have these crazy architectures where we're going in and out of the data center. Naturally, the first thing we gravitated towards was innovation particularly because USDS has a lot of engineers from Google so they're very enthusiastic about this it's the future, Google invented it, it must be amazing, it is amazing and the problem with zero trust networks is -- well, let me take a step back. Every single thing that connects to your network is potentially compromised so every single thing that communicates with your network should communicate over mutual SS, you should choose multi-authentication for the user, and you should use good device management. You should basically run your network as if everything on it is not trusted. The problem with this in the government is that it relies really heavily on PKI, which is something that the government has struggled with for the last couple of years. So in 2004, the Homeland Security presidential directive 12 came out. Which basically said, hey, everybody, let's do secure IDs, let's use credentials, make them government-wide, make them super easy to use from agency to agency, let's get this done and seven years later, the government accountability department, which is a department under Congress had reported that they had made a lot of progress with this, butted it had not yet been fully implemented and actually at USDS there's a bit of a running gag about how many badges can you really collect in the government as you go from project to project to project, because none of our badges are actually compatible with onener 0. I have three. I would have four, except the DOD would not give me one unless I agreed to work for them for six months and I was like, you know what I'm OK with having really cute soldiers escort me everywhere I go, that's fine.
    So another problem that we have with the zero trust network is that engineering groups are frequently very heavily siloed from one another, not just the traditional wall between development and operations, will but also development groups are very heavily separated from one another and operations groups may be siloed, as well, and so what happens in that kind of environment is that one Engineering Group is trying to build a thing, needs access to something that another Engineering Group owns, can't manage to negotiate how they get access, so they start looking for cheap work-arounds or just quick fixes, which in this kind of environment introduces a lot of security vulnerabilities.
    So we generally think about user design as a front end issue. As being something that's about making things pretty, but in my opinion, user design is actually even more important when we're talking about network security, because if people don't understand what makes the network secure or how to use the network effectively or how to like work those access controls, then they will ultimately try to violate the access controls and then you don't have security.
    So the reason why we put this aside is because we didn't believe that every single agency in the government was capable of implementing it in a way that was safe and secure. So we went back to the concept of the tech itself and we thought about how do we virtualize this? And then we hit the first big barrier, which is like you can't put the TIC in the cloud, because Amazon won't build us a SCIF. So for those of you who are not familiar with a SCIF, it is essentially a room where you can discuss secret information. I know what you're thinking war-room type scenarios, but most SCIFs is the most boring conference room you've ever been in your life, beige paint, no windows, no decor of any kind. And the reason why this is a problem is because the TIC reference architecture says that there must be a SCIF 30 minutes away from what is called a TIC management location. Most people interpret that directive in the reference architecture to mean that there must be a SCIF 30 minutes away from your data center. However, the TIC reference architecture actually never defines what a TIC management location is. It never says it's a data center. What it says about it are the following things: The first thing that it says it that must be in a government-exclusive space. It must be staffed 24 hours. It must be 30 minutes from a SCIF. Little side note to that. They never define 30 minutes by what, so we were kind of like, a 30-minute walk in a 30-minute drive, a 30-minute HTTP request? What are we talking about here?
    [laughter]
    
    And the last thing it says is that ops people must have remote access. But it could actually very legitimately mean this, just a government building where you already have a SCIF, you use the APIs to manage the TIC at your TIC management location remotely. So then we came across the big barrier, the thing that has probably killed every attempt to reform tech so far is you can't put classified signatures in a cloud and especially not in a cloud that you don't own and so my reaction to this was but why do we need to put classified signatures in the cloud? So a little backstory about this. The program that I'm referencing here is called Einstein and essentially it is an intrusion detection system that is built by and maintained by DHS. It takes classified signatures and monitors web traffic, well, monitors all sorts of traffic on and off all sorts of government networks, across all agencies, and in 2016, government accountability office said sort of like, hey, you know what they're doing a really good job blocking malicious email traffic, they're doing a good job blocking malicious DNS but they're not doing anything to block web traffic. And DHS's own documentation specifies that Einstein is about social awareness. DHS has this problem, they were being asked by Congress and by the executive branch to basically monitor cyberwarfare and fight fires around the government. So they needed a way to sort of automate that information so they didn't have to go to the agency and require the agency to follow the rules and report these things effectively. So one of the problems that Einstein presents is not what it is or even the effectiveness of what it is. It's the idea of what it could do in the future. Everyone gets very, very excited about the Einstein of tomorrow which will have all of these bells and all of these whistles and fireworks will go off around it. You read the documentation and it will say in the future we will be able to block web traffic, in the future we will do this, we will do that. But that kind of overlooks the fact that we have the Einstein of today, right so one of the most important things we did in this process is actually just refocus the conversation and said you know what, we'll deal with the Einstein of the future in the future, when the 7th seal is broken and descends we'll make sure that whatever technology we're running integrates perfectly with it, but we're living in the today, so let's deal with the Einstein of today and make sure that what we're proposing works with the Einstein of today. So what does that actually mean? A lot of times in these kind of technical conversations they're a bit like negotiations and in negotiations it's really important to sort of understand what is important for you to advance your goal, what your negotiating position is and what their negotiation position is so what does Einstein actually need to do the job that it is currently doing? It needs visibility, it needs data, it needs to be able to alert agencies when it detects a problem and it needs government feed. What is USDS concerned about? Concerned about email security? Not really. I mean we're pretty happy with the government's current email security. Probably could be better. But you know, like, seems to get the job done. Is USDS concerned about government network security any mean if there's a problem we'll come help out but it's not really our mandate. It's not what we came to DC to do. The thing that we're really concerned about is the public-facing websites. So that's something that I would say a lot, again and again and again, is we're interested and we're going to push based on this interest in getting public-facing government websites to be as scalable and performant and secure as possible so everything that I say is in that frame of mind and if there's some reason why it won't work for your factors, let's bring it to your table and discuss it. So when it got to the place, the question became can't we just mirror the packets from the cloud to Einstein? Why do we have to move Einstein to the cloud? Let's leave Einstein where it is and send a copy of the traffic over to Einstein. So it surprised everybody when DHS came back and said, yeah, that might actually work. If you want to do that, try that out. It seems like it might work. So then we got to this question of OK, how do we do that so probably the most obvious way to mirror traffic is on a switch. The problem with that is Amazon is not going to let you access their switch it's just not going to happen. So another way you could think about doing it is on the router and actually Amazon does offer the possibility to do gateway routers that do have a certain amount of configuration options to them, but that's sort of Amazon-specific. There's no guarantee that other options are going to offer the same services or expose the same configuration settings, so the thing we settled on is we can do it on the VM level. But the tradeoff there is that adds a lot of overhead to your image, right? It adds a lot of overhead to your instance. It's not cheap.
    So when we thought about that, we thought, well, we already have an image that we're running all our traffic through, it's called load balancer and load balancer is it reasonably lightweight so what if we did this. What if we mir localized the tech, is that a thing that's going to work? And so for our perspective there's lot of stuff we have left to sort out. We don't exactly know what the load -- the resource load on the V MS is going to be for doing this and more importantly, we don't exactly know what the load on the network is going to be. Like, mirroring traffic is not particularly cheap so we have to figure out does that even work in a cloud environment and the last thing is that we probably want to be able to encrypt this traffic, right? We gotta figure out how that's going to happen but more importantly we also have to figure out that whatever this ends up looking at it adds the most value to government agencies, we don't want government people to just be focusing on using this thing because it improves their compliance. We want them to focus on using this thing because it increases their security, increases their performance, we want it to have legitimate value add. So we can look at this idea that we know for a fact that GovCloud's elastic load balance or doesn't have the full features that AWS balance has. And we're looking to see if we can bring a solution that brings some of that stuff into this new model.
    And lastly, zero trust networks are not the right solution right now, but they are the future and who knows what ten years from now this is going to look like. We're not going to see a stop in how networks perimeters are dissolving, like the more we integrate technology into our lives, and the more we work, the more these issues are going to continue to expand and degrade the concept of a network perimeter. So at some point we have to get the government to move over to something that they can eventually jump off and hit a zero trust network because reasonably speaking that's probably what things are going to look at going forward so how can we use this as an opportunity to get them headed in the right direction so that as that as technology matures, they're able to evolve with it. So lastly there's the question of why exactly is this so hard? It amazed me that when I brought up the concept of packet mirroring, how easy that conversation was, and I have this moment that you're telling me five years and hundreds of engineers, no one has ever suggested to you that we could just mirror the traffic over? But these things are hard, because there's a lot of like mental separation that has to go into the way you examine the problem itself. So when TIC policy was originally written in 2007, it merged the concepts of software as a service, cloud hosting and mobile devices. It treated them as if they were all the same. They're not all the same they've grown into like completely different things that require a completely different security added to and perspective. So in order to fix the policy, people have to become aware of that fact, they have to separate these policies out and treat them differently. Also getting people to separate their current needs from their future needs from their wish lists takes a lot of like careful conversation. We had to have the same conversation with the same people over and over and over again, just to make sure that we were all in the same page and we're all defining things correctly.
    The people who are good at writing policy and the people who have technical expertise are rarely the same people. I've learned a lot of really interesting things about writing policy and like Oxford commas and how you should never use and/or in a policy because it's kind of counterintuitive but I've also taught a lot of things about how technology works, how networks work, what you can do with the cloud. It's really about making sure these people are able to find each other and sometimes they have trouble finding each other.
    Lastly, the best -- if the best solution can't be understood by its users, it's not a solution and I would just now realized there's a typo in my slide that's fairly hilarious. You know you work on something for a certain period of time and you never catch anything. All right, so if the best solution can't be understood by its users it's not the right solution. So what's our current status here? The TIC working group's output contributed to a memo that was put out by the office of American innovation. Actually, I take that back, the memo was not officially put out. It has just closed public commentary. So you can go online and read the draft but it's not officially out until they adjudicate all of the comments. By the way, they do this all on GitHub, it's fairly cool. So our output was contributed to the the report that basically said let's start experimenting with some of these ideas. Let's take a few projects at a few agencies and just kind of take the leash off and say like, all right, if you wanted to do TIC for the modern age, show you what you would do and let's collect data and figure out what the policy should look like going forward. The acting federal CIO has basically put TIC policy as one of the top priorities for the things she wants to fix going forward. So I actually have a little bit of extra time, which is cool, so I'm going to go into a little side commentary about why policy, not necessarily specific tech policy, is so difficult to do, so this is generally what policy, how policy gets written. It gets drafted, then it gets sent out to agencies for comment, then it gets sent to the lawyers who pick nits like you wouldn't believe and then it gets sent out to the public for public commentary and this all looks very simple and very intuitive except that at any point in time if there's something that's highlighted it goes back to the beginning. You have no idea how hard a question this is to answer. So officially there are I think 24CFO act agencies, so you can think of those as the big ones, the Department of Defense, Department of Treasury, so on and so forth but if you start breaking down the little ones you can get anywhere from 100 to 400 and you get into they other conversations like does FannieMae and FreddieMac get into these and when you get into the public commentary section, you have to remember that when we say public commentary, we mean individuals like you, like you are welcome to make comments on government policy, but more likely we mean corporations and lobbyists who do not write short comments I might add. So for a little bit of fun let me show you this is Google's public comment on the -- OK, that did not work. But I have a lovely desktop, don't I?
    Oh, no!  OK, well, I can't show you. I was mirroring displays. No, it's all right. I was going to show you Google's comment -- you can actually go to GSA's GitHub IT modernization into the comment section and download it for yourself, but it's like about two to three pages of Google advertising how great all of their products and services are, followed by two pages of comments on what the actual policy was and when you read the corporation comments, they're all basically like that. It's like, so here's a background in which we tell you why should give us all the money to fix all the problems that you've highlighted and oh, by the way we have some comments on your actual policy. So I'm about at the end of my time. Thank you so much for listening. If you guys have any questions, we set up a civic-tech channel on the Slack, you can ping me @Marianne or you can just hunt me down. That's cool, too. Thanks.
    [applause]
